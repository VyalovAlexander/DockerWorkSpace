version: '2'
services:
  nginx:
    build:
       context: ./
       dockerfile: ./docker/nginx/Dockerfile
    env_file:
      - .env
    ports:
      - "${NGINX_HTTP_EXTERNAL_PORT}:80"
      - "${NGINX_HTTPS_EXTERNAL_PORT}:443"
    volumes:
      - ./docker/nginx/hosts:/etc/nginx/conf.d
      - .:/var/www
      - ./docker/nginx/logs:/var/log/nginx
    #command: sh /docker-command.sh
    links:
      - php
      - node
  node:
    build:
      context: ./
      dockerfile: ./docker/node/Dockerfile
    env_file:
      - .env
    volumes:
      - .:/var/www
      - ./docker/node/logs:/root/.npm/_logs
    command: sh /docker-command.sh
  php:
    build:
      context: ./
      dockerfile: ./docker/php/Dockerfile
      args:
        - XDEBUG_REMOTE_HOST=${XDEBUG_REMOTE_HOST}
        - XDEBUG_REMOTE_PORT=${XDEBUG_REMOTE_PORT}
    env_file:
      - .env
    links:
      - postgres
      - redis
    volumes:
      - .:/var/www
      - ./docker/php/logs:/var/log
    command: sh /docker-command.sh
  postgres:
    build:
      context: ./
      dockerfile: ./docker/postgres/Dockerfile
    env_file:
      - .env
    ports:
      - ${POSTGRES_EXTERNAL_PORT}:5432
    volumes:
      - ./docker/postgres/data:/data/postgres
    #command: sh /docker-command.sh
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      PGDATA: /data/postgres
  redis:
    build:
      context: ./
      dockerfile: ./docker/redis/Dockerfile
    env_file:
      - .env
    restart: always
    ports:
      - "${REDIS_EXTERNAL_PORT}:6379"
    volumes:
      - ./docker/redis/data:/data
    #command: sh /docker-command.sh



